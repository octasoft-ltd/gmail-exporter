name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run tests
      run: go test -v ./...

    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build binaries
      run: |
        # Create dist directory
        mkdir -p dist
        
        # Build for multiple platforms
        platforms=(
          "linux/amd64"
          "linux/arm64"
          "darwin/amd64"
          "darwin/arm64"
          "windows/amd64"
          "windows/arm64"
        )
        
        for platform in "${platforms[@]}"; do
          platform_split=(${platform//\// })
          GOOS=${platform_split[0]}
          GOARCH=${platform_split[1]}
          
          output_name="gmail-exporter-${GOOS}-${GOARCH}"
          if [ $GOOS = "windows" ]; then
            output_name+='.exe'
          fi
          
          echo "Building for $GOOS/$GOARCH..."
          env GOOS=$GOOS GOARCH=$GOARCH go build \
            -ldflags="-s -w -X main.version=${{ steps.version.outputs.VERSION }}" \
            -o dist/$output_name \
            ./cmd/gmail-exporter
        done

    - name: Create checksums
      run: |
        cd dist
        sha256sum * > checksums.txt
        cat checksums.txt

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -z "$PREV_TAG" ]; then
          echo "CHANGELOG=Initial release" >> $GITHUB_OUTPUT
        else
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s" $PREV_TAG..HEAD >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Gmail Exporter ${{ steps.version.outputs.VERSION }}
        body: |
          ## Changes
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          
          Download the appropriate binary for your platform:
          
          ### Linux
          ```bash
          # AMD64
          wget https://github.com/octasoft-ltd/gmail-exporter/releases/download/${{ steps.version.outputs.VERSION }}/gmail-exporter-linux-amd64
          chmod +x gmail-exporter-linux-amd64
          sudo mv gmail-exporter-linux-amd64 /usr/local/bin/gmail-exporter
          
          # ARM64
          wget https://github.com/octasoft-ltd/gmail-exporter/releases/download/${{ steps.version.outputs.VERSION }}/gmail-exporter-linux-arm64
          chmod +x gmail-exporter-linux-arm64
          sudo mv gmail-exporter-linux-arm64 /usr/local/bin/gmail-exporter
          ```
          
          ### macOS
          ```bash
          # Intel Macs
          wget https://github.com/octasoft-ltd/gmail-exporter/releases/download/${{ steps.version.outputs.VERSION }}/gmail-exporter-darwin-amd64
          chmod +x gmail-exporter-darwin-amd64
          sudo mv gmail-exporter-darwin-amd64 /usr/local/bin/gmail-exporter
          
          # Apple Silicon Macs
          wget https://github.com/octasoft-ltd/gmail-exporter/releases/download/${{ steps.version.outputs.VERSION }}/gmail-exporter-darwin-arm64
          chmod +x gmail-exporter-darwin-arm64
          sudo mv gmail-exporter-darwin-arm64 /usr/local/bin/gmail-exporter
          ```
          
          ### Windows
          Download the appropriate `.exe` file and run it from Command Prompt or PowerShell.
          
          ## Verification
          
          Verify the download with checksums:
          ```bash
          wget https://github.com/octasoft-ltd/gmail-exporter/releases/download/${{ steps.version.outputs.VERSION }}/checksums.txt
          sha256sum -c checksums.txt
          ```
          
          ## Documentation
          
          - [Authentication Setup](https://github.com/octasoft-ltd/gmail-exporter/blob/main/AUTHENTICATION_SETUP.md)
          - [Security Documentation](https://github.com/octasoft-ltd/gmail-exporter/blob/main/SECURITY.md)
          - [Usage Guide](https://github.com/octasoft-ltd/gmail-exporter/blob/main/USAGE.md)
        files: |
          dist/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 