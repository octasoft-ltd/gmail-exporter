name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GOPRIVATE: github.com/octasoft-ltd/*
  GONOPROXY: github.com/octasoft-ltd/*
  GONOSUMDB: github.com/octasoft-ltd/*

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'
        cache: true  # Enable built-in caching

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [test]  # Run after test job to benefit from its cache
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'
        cache: true  # Enable built-in caching

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6.5.2
      with:
        version: v1.64.8
        args: --out-format=colored-line-number
        # Let the action handle its own caching - remove manual cache settings

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [lint]  # Run after lint job
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'
        cache: true  # Enable built-in caching

    - name: Download dependencies
      run: go mod download

    - name: Install Gosec
      run: go install github.com/securego/gosec/v2/cmd/gosec@latest

    - name: Run Gosec Security Scanner
      run: gosec -no-fail ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [security]  # Run after security job
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'
        cache: true  # Enable built-in caching

    - name: Download dependencies
      run: go mod download

    - name: Build for multiple platforms
      run: |
        # Linux
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o gmail-exporter-linux-amd64 ./cmd/gmail-exporter
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o gmail-exporter-linux-arm64 ./cmd/gmail-exporter
        
        # macOS
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o gmail-exporter-darwin-amd64 ./cmd/gmail-exporter
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o gmail-exporter-darwin-arm64 ./cmd/gmail-exporter
        
        # Windows
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o gmail-exporter-windows-amd64.exe ./cmd/gmail-exporter
        GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -o gmail-exporter-windows-arm64.exe ./cmd/gmail-exporter

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: gmail-exporter-* 