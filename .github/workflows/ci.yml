name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Build packages
      run: go build ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build packages
      run: go build ./...

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build for Linux
      run: |
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o gmail-exporter-linux-amd64 ./cmd/gmail-exporter
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o gmail-exporter-linux-arm64 ./cmd/gmail-exporter

    - name: Build for macOS
      run: |
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o gmail-exporter-darwin-amd64 ./cmd/gmail-exporter
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o gmail-exporter-darwin-arm64 ./cmd/gmail-exporter

    - name: Build for Windows
      run: |
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o gmail-exporter-windows-amd64.exe ./cmd/gmail-exporter
        GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -o gmail-exporter-windows-arm64.exe ./cmd/gmail-exporter

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: gmail-exporter-*

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify Go modules
      run: go mod verify

    - name: Build packages
      run: go build ./...

    - name: Install Gosec
      run: go install github.com/securego/gosec/v2/cmd/gosec@v2.22.4

    - name: Run Gosec Security Scanner
      run: gosec -no-fail ./... 